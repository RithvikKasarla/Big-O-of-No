generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model User {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  name    String?
  classes   Class[] //Many to many relationship with classes.
  files   File[] //One to many relationship with files.
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
//Class table.
//Each class should have a unique name.
//Each class can have multiple users.
//Each class has a description.
//User to Class is a many-to-many relationship.
//The Name can't be null
model Class {
  id    Int    @id @default(autoincrement())
  name  String @unique //Unique name for the class.
  users User[] //Many to many relationship with users.
}

//File table
//Links to a unique s3 bucket asset.
//Includes a name.
//Owned by a single user.
//User to File is a One-To-Many relationship.
model File {
  id        Int     @id @default(autoincrement())
  name      String //Name of the file.
  author    User    @relation(fields: [authorId], references: [id]) //Link to the user who uploaded the file.
  authorId  Int //Link to the user who uploaded the file.
  //link to the s3 bucket.
  path      String  @unique //Unique path to the file.

}